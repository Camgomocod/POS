#!/usr/bin/env python3
"""
Test para identificar qu√© importaci√≥n espec√≠fica en AdminWindow causa el cuelgue
"""

import sys
import os
import traceback

# Configurar entorno
os.environ['QT_QPA_PLATFORM'] = 'windows'
os.environ['QT_AUTO_SCREEN_SCALE_FACTOR'] = '1'

# Agregar directorio del proyecto
project_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, project_dir)

print("üîç TEST DE IMPORTACIONES DE AdminWindow")
print("=" * 42)

try:
    # PyQt5 b√°sico
    from PyQt5.QtWidgets import QApplication
    app = QApplication(sys.argv)
    print("‚úÖ PyQt5 b√°sico OK")

    # Probar cada importaci√≥n de AdminWindow una por una
    print("\nüìã Probando importaciones de AdminWindow:")

    print("   1. PyQt5 widgets...")
    from PyQt5.QtWidgets import (
        QMainWindow, QWidget, QVBoxLayout, QHBoxLayout, QLabel,
        QPushButton, QFrame, QStackedWidget, QApplication, QMessageBox,
        QTabWidget, QScrollArea, QGridLayout, QSizePolicy,
        QTableWidget, QTableWidgetItem, QAbstractItemView
    )
    print("   ‚úÖ PyQt5 widgets OK")

    print("   2. PyQt5 core...")
    from PyQt5.QtCore import Qt, pyqtSignal, QTimer
    print("   ‚úÖ PyQt5 core OK")

    print("   3. PyQt5 gui...")
    from PyQt5.QtGui import QFont, QIcon, QPixmap, QPainter, QPen, QColor
    print("   ‚úÖ PyQt5 gui OK")

    print("   4. utils.colors...")
    from utils.colors import ColorPalette, CommonStyles
    print("   ‚úÖ utils.colors OK")

    print("   5. controllers.auth_controller...")
    from controllers.auth_controller import AuthController
    print("   ‚úÖ auth_controller OK")

    print("   6. views.user_management_window...")
    try:
        from views.user_management_window import UserManagementWidget
        print("   ‚úÖ user_management_window OK")
    except Exception as e:
        print(f"   ‚ùå ERROR en user_management_window: {e}")
        traceback.print_exc()

    print("   7. views.menu_management_window...")
    try:
        from views.menu_management_window import MenuManagementWidget
        print("   ‚úÖ menu_management_window OK")
    except Exception as e:
        print(f"   ‚ùå ERROR en menu_management_window: {e}")
        traceback.print_exc()

    print("   8. views.reports_view...")
    try:
        from views.reports_view import ReportsView
        print("   ‚úÖ reports_view OK")
    except Exception as e:
        print(f"   ‚ùå ERROR en reports_view: {e}")
        traceback.print_exc()

    print("   9. views.printer_config_view...")
    try:
        from views.printer_config_view import PrinterConfigView
        print("   ‚úÖ printer_config_view OK")
    except Exception as e:
        print(f"   ‚ùå ERROR en printer_config_view: {e}")
        traceback.print_exc()

    print("   10. datetime...")
    from datetime import datetime, timedelta
    print("   ‚úÖ datetime OK")

    print("   11. sys y time...")
    import sys
    import time
    print("   ‚úÖ sys y time OK")

    # Ahora intentar importar AdminWindow completo
    print("\nüéØ Importando AdminWindow completo...")
    from views.admin_window import AdminWindow
    print("‚úÖ AdminWindow importado exitosamente!")

    # Probar crear una instancia
    print("\nüß™ Probando crear instancia de AdminWindow...")
    try:
        # Crear un usuario dummy para el test
        from models.user import User, UserRole
        dummy_user = User()
        dummy_user.username = "test"
        dummy_user.role = UserRole.ADMIN
        
        admin_window = AdminWindow(dummy_user)
        print("‚úÖ AdminWindow creado exitosamente!")
        
        admin_window.deleteLater()
        
    except Exception as e:
        print(f"‚ùå Error creando AdminWindow: {e}")
        traceback.print_exc()

    print("\nüéâ TODAS LAS IMPORTACIONES FUNCIONAN!")

except Exception as e:
    print(f"\n‚ùå ERROR EN IMPORTACI√ìN: {e}")
    traceback.print_exc()

finally:
    print("\n" + "="*50)
    print("Si todas las importaciones pasaron, el problema puede estar")
    print("en una dependencia circular o en el momento de ejecuci√≥n")
    print("="*50)

input("\nPresiona Enter para salir...")
